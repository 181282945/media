spring:
    datasource:
#      readSize: 1
#      name: writeDataSource
      type: com.alibaba.druid.pool.DruidDataSource
      write:
        url: jdbc:mysql://${SystemParameter.dbaddr}:${SystemParameter.dbport}/cloudinvoice?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=true
        username: ${SystemParameter.username}
        password: ${SystemParameter.password}
        driver-class-name: com.mysql.jdbc.Driver
        initialSize: 50 #初始化连接池大小
        minIdle: 50 #最小连接池数量
        maxActive: 500 #最大连接池数量
        maxWait: 60000 #获取连接等待超时时间  毫秒
        timeBetweenEvictionRunsMillis: 300000 #连接最小存活时间 毫秒
        validationQuery: SELECT 'x' #测试连接


      inforSchema:
        url: jdbc:mysql://${SystemParameter.dbaddr}:${SystemParameter.dbport}/information_schema?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=true
        username: ${SystemParameter.username}
        password: ${SystemParameter.password}
        driver-class-name: com.mysql.jdbc.Driver
        initialSize: 50 #初始化连接池大小
        minIdle: 50 #最小连接池数量
        maxActive: 500 #最大连接池数量
        maxWait: 60000 #获取连接等待超时时间  毫秒
        timeBetweenEvictionRunsMillis: 300000 #连接最小存活时间 毫秒
        validationQuery: SELECT 'x' #测试连接



      filters: stat,wall,log4j # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      useGlobalDataSourceStat: true # 合并多个DruidDataSource的监控数据



    #thymeleaf开发环境关闭thymeleaf缓存
    thymeleaf:
#      prefix: classpath:/templates/
      prefix: classpath:/static/html/
      suffix: .html
      cache: false
      mode: LEGACYHTML5
      encoding: utf-8
      content-type: text/html
    devtools:
      restart:
        enabled: true #热部署生效
#        exclude: static
      #
server:
  tomcat:
    access_log_enabled: true
    basedir: target/tomcat

#security:
#  ignored: /**





#参数
SystemParameter:
  #自动创建数据库,库名前缀
  dbNamePrefix: Db
  #数据库IP
  dbaddr: 192.168.55.225
  dbport: 3306
  username: root
  password: root
  invoiceinfoSql: CREATE TABLE `invoice_invoiceinfo` (
                    `id` int(11) NOT NULL AUTO_INCREMENT,
                    `serialNo` varchar(50) NOT NULL COMMENT '流水号(唯一索引)',
                    `orderNo` varchar(50) NOT NULL COMMENT '订单号(索引，可重复),如果是红票，则填写蓝票订单号',
                    `projectName` varchar(255) DEFAULT NULL COMMENT '商品名称',
                    `taxTotal` decimal(10,2) DEFAULT NULL COMMENT '税额合计',
                    `noTaxTotal` decimal(10,2) DEFAULT NULL COMMENT '不含税合计',
                    `priceTotal` decimal(10,2) DEFAULT NULL COMMENT '价税合计',
                    `invoiceCode` varchar(50) NOT NULL COMMENT '发票代码',
                    `invoiceNum` varchar(50) NOT NULL COMMENT '发票号码',
                    `invoiceDate` datetime NOT NULL COMMENT '开票日期',
                    `pdfUrl` varchar(255) DEFAULT NULL COMMENT 'Pdf下载地址',
                    `invoiceType` tinyint(4) DEFAULT NULL COMMENT '发票类别(0蓝票，1红票)',
                    `reMarks` varchar(255) DEFAULT NULL COMMENT '备注(红票时填写冲红原因)',
                    `usrno` varchar(50) DEFAULT NULL COMMENT '用户账号',
                    `redflags` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0 未冲红,1 已冲红(默认0)',
                    `serialNoRed` varchar(50) DEFAULT NULL COMMENT '红票流水号(避免重复开票)',
                    `listFlag` tinyint(4) NOT NULL DEFAULT '0' COMMENT '清单标识',
                    `listItemName` varchar(50) DEFAULT NULL COMMENT '清单标志项目名称',
                    `insertdate` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
                    `delflags` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0正常，1删除(默认0)',
                    PRIMARY KEY (`id`),
                    UNIQUE KEY `idx_uniq_serialNo` (`serialNo`) USING BTREE,
                    KEY `idx_orderNo` (`orderNo`) USING BTREE
                  ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

  orderinfoSql: CREATE TABLE `invoice_orderinfo` (
                  `id` int(11) NOT NULL AUTO_INCREMENT,
                  `taxno` varchar(50) NOT NULL,
                  `dkflags` tinyint(4) NOT NULL COMMENT '代开标志（0 自开，1 代开）',
                  `ticketCode` varchar(10) DEFAULT NULL COMMENT '票样代码',
                  `majorItems` varchar(255) NOT NULL COMMENT '主要开票商品',
                  `buyerName` varchar(200) NOT NULL COMMENT '购货方名称',
                  `buyerTaxno` varchar(20) DEFAULT NULL COMMENT '购货方税号(纳税识别号)',
                  `buyerAddr` varchar(200) DEFAULT NULL COMMENT '购货方地址',
                  `buyerProvince` varchar(20) DEFAULT NULL COMMENT '购货方省份',
                  `buyerTele` varchar(15) DEFAULT NULL COMMENT '购货方固定电话',
                  `buyerMobile` varchar(30) NOT NULL COMMENT '购货方手机',
                  `buyerEmail` varchar(100) DEFAULT NULL COMMENT '购货方邮箱',
                  `buyerType` varchar(10) NOT NULL COMMENT '购货方类型（01：企业02：机关事业单位03：个人04：其它）',
                  `buyerBankAcc` varchar(100) DEFAULT NULL COMMENT '购货方账号(开户行及账号)',
                  `induCode` varchar(50) DEFAULT NULL COMMENT '行业代码',
                  `induName` varchar(50) DEFAULT NULL COMMENT '行业名称',
                  `remarks` varchar(200) DEFAULT NULL COMMENT '备注',
                  `orderNo` varchar(50) DEFAULT NULL,
                  `status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '订单状态(0未开，1已开，默认0)',
                  `usrno` varchar(50) NOT NULL COMMENT '用户账号',
                  `orderDate` datetime DEFAULT NULL,
                  `serialNo` varchar(50) DEFAULT NULL,
                  `insertDate` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
                  `delflags` tinyint(4) NOT NULL DEFAULT '0' COMMENT '删除标识',
                  PRIMARY KEY (`id`),
                  UNIQUE KEY `idx_uniq_orderNo` (`orderNo`)
                ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

  orderdetailSql: CREATE TABLE `invoice_orderdetail` (
                    `id` int(11) NOT NULL AUTO_INCREMENT,
                    `orderNo` varchar(50) NOT NULL COMMENT '订单号(索引，可重复)',
                    `itemName` varchar(200) NOT NULL COMMENT '商品名称',
                    `itemUnit` varchar(10) DEFAULT NULL COMMENT '单位',
                    `itemNum` varchar(30) DEFAULT NULL COMMENT '商品数量，保留两位小数',
                    `specMode` varchar(30) DEFAULT NULL COMMENT '规格型号',
                    `itemPrice` decimal(10,2) NOT NULL COMMENT '单价',
                    `taxIncluded` tinyint(4) NOT NULL COMMENT '含税标识(0:不含税,1:含税)',
                    `invoiceNature` tinyint(4) NOT NULL COMMENT '发票行性质(0正常，1折扣行，2被折扣行)',
                    `itemTaxCode` varchar(50) NOT NULL COMMENT '税控分类编码',
                    `cuzCode` varchar(50) DEFAULT NULL COMMENT '自行编码',
                    `taxRate` varchar(50) NOT NULL COMMENT '税率',
                    `insertDate` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
                    `delflags` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0正常，1删除(默认0)(注意：订单号改为：订单号-1)',
                    PRIMARY KEY (`id`),
                    KEY `fk_orderNo` (`orderNo`),
                    CONSTRAINT `fk_orderNo` FOREIGN KEY (`orderNo`) REFERENCES `invoice_orderinfo` (`orderNo`) ON DELETE CASCADE ON UPDATE CASCADE
                  ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;



  taxRate: 0,0.015,0.03,0.04,0.05,0.06,0.11,0.13,0.17  #合法税率数组,如果用户导入数据,跟数组税率不匹配,那么将不会导入

#
Request:
  url: http://ei.szhtxx.com:9001/front/request/4458
  GlobalInfo:
    terminalCode: 0 #//终端类型标识代码 0:B/S 请求来源 1:C/S 请求来源
    appId: ZZS_PT_DZFP  #应用标识 固定为： DZFP 表示普通发票。 ZZS_PT_DZFP 表示增值税普通电子发票
    version: 2.0    #接口版本
    requestCode: P0000001  #数据交换请求发出方代码
#    interfaceCode: DFXJ1009
    responseCode: 121 #数据交换请求接受方代码
    dataExchangeId: P0000001ECXML.FPKJ.BC.E_INV000000001  #据说没有校验,所以可以写死
    downloadInterfaceCode: ECXML.FPXZ.CX.E_INV #下载接口代码
    billingInterfaceCode: DFXJ1009 #测试开票 接口代码

  DataDescription:
    zipCode: 0  #压缩标识 0：不压缩 1：压缩 (用 GZip 压缩) 企业调 用时数据包大于 10k 要求自动压缩，
    encryptCode: 2 #加密标识 0:不加密 1: AES 加密 2:CA 加密
    codeType: CA  #加密方式 0 、 AES 加密 、 CA 加密